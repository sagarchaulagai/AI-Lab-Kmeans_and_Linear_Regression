# -*- coding: utf-8 -*-
"""linear_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TPKjdrzqoMgJkPz8MtKfvv6Z_5gcKRWY
"""

import pandas as pd
import matplotlib.pyplot as plt

# Sample data , math vaneko x rey and science vaneko y
students = ['1', '2', '3', '4', '5']
maths = [92, 78, 85, 70, 60]
science = [88, 82, 90, 65, 68]

# Means
mean_x = sum(maths) / len(maths)
mean_y = sum(science) / len(science)

# Centered variables
x = [xi - mean_x for xi in maths]
y = [yi - mean_y for yi in science]

# Squares & cross‑products
x2 = [i**2 for i in x]
y2 = [i**2 for i in y]
xy = [x[i] * y[i] for i in range(len(x))]

# Tabulate the calculations
df = pd.DataFrame({
    'Student': students,
    'Maths (X)': maths,
    'Science (Y)': science,
    f'x = X - {mean_x:.1f}': x,
    f'y = Y - {mean_y:.1f}': y,
    'x²': x2,
    'y²': y2,
    'x·y': xy
})

df.loc['Total'] = [''] * 3 + [''] * 2 + [sum(x2), sum(y2), sum(xy)]
df

# Compute slope (b) and intercept (a)
b = sum(xy) / sum(x2)
a = mean_y - b * mean_x
print(f"Regression Equation: Y = {a:.2f} + {b:.3f} * X")

# Example prediction: expected Science score for Maths = 75
X_new = 75
Y_pred = a + b * X_new
print(f"Predicted Science marks for Maths = {X_new}: {Y_pred:.2f}")

# Visualization
plt.figure(figsize=(8, 6))
plt.scatter(maths, science, label='Original data')
plt.plot(maths, [a + b*x for x in maths], label='Regression line', linewidth=2)
plt.scatter(X_new, Y_pred, marker='x', s=100, label=f'Prediction ({X_new}, {Y_pred:.2f})')

plt.xlabel('Maths Marks')
plt.ylabel('Science Marks')
plt.title('Linear Regression: Predicting Science from Maths')
plt.legend()
plt.grid(True)
plt.show()